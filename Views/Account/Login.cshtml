@model IMPL.IDS.Models.Account.LoginModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta content="width=device-width,initial-scale=1,minimal-ui" name="viewport">
    <title>IMPL.IDS.LOGIN</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic|Material+Icons">
    <link rel="stylesheet" href="https://unpkg.com/vue-material@beta/dist/vue-material.min.css">
    <link rel="stylesheet" href="https://unpkg.com/vue-material@beta/dist/theme/default.css">
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <div id="app">
        <div class="centered-container">
            <md-content class="md-elevation-3">
                <div class="title">
                    <img src="~/favicon.png" />
                    <div class="md-title">IMPL.IDS.LOGIN</div>
                    <div class="md-body-1">企业想真好，踏踏实实搞</div>
                </div>
                <div class="form">
                    <md-field :class="usernameInvalidClass">
                        <label>账号</label>
                        <md-input v-model="user.username" autofocus></md-input>
                        <span class="md-error">{{ usernameInvalidMessage }}</span>
                    </md-field>
                    <md-field :class="passwordInvalidClass" md-has-password>
                        <label>密码</label>
                        <md-input v-model="user.password" type="password"></md-input>
                        <span class="md-error">{{ passwordInvalidMessage }}</span>
                    </md-field>
                </div>
                <div class="actions md-layout md-alignment-center-space-between">
                    <div>
                        <md-checkbox v-model="user.rememberLogin" class="md-primary">记住我</md-checkbox>
                    </div>
                    <div>
                        <md-button class="md-raised md-primary" v-on:click="login">LOGIN</md-button>
                        <md-button class="md-raised md-primary" v-on:click="cancel">CANCEL</md-button>
                    </div>
                </div>
                <div class="loading-overlay" v-if="loading">
                    <md-progress-spinner md-mode="indeterminate" :md-stroke="2"></md-progress-spinner>
                </div>
            </md-content>
            <div class="background"></div>
            @if (ViewContext.ModelState.IsValid == false)
            {
                <md-snackbar :md-position="snackbar.position" :md-duration="Infinity" :md-active.sync="snackbar.active">
                    <div asp-validation-summary="All"></div>
                </md-snackbar>
            }
        </div>
        <form asp-route="Login" class="hidden">
            <input type="text" asp-for="ReturnUrl" />
            <input type="text" asp-for="Username" />
            <input type="password" asp-for="Password" />
            <input asp-for="RememberLogin" />
            <button id="Login" name="button" value="LOGIN">LOGIN</button>
            <button id="Cancel" name="button" value="CANCEL">CANCEL</button>
        </form>
    </div>
    <script src="https://unpkg.com/vue"></script>
    <script src="https://unpkg.com/vue-material@beta"></script>
    <script>
        Vue.use(VueMaterial.default)
        new Vue({
            el: '#app',
            data: {
                loading: false,
                snackbar: {
                    position: 'center',
                    active: true
                },
                user: {
                    username: 'bob',
                    password: 'Pass123$',
                    rememberLogin: '@Model.RememberLogin' == 'True'
                },
                usernameInvalid: false,
                usernameInvalidMessage: '',
                passwordInvalid: false,
                passwordInvalidMessage: ''
            },
            computed: {
                usernameInvalidClass: function() {
                    return {
                        'md-invalid': this.usernameInvalid && this.user.username.trim() == ''
                    }
                },
                passwordInvalidClass: function () {
                    return {
                        'md-invalid': this.passwordInvalid && this.user.password.trim() == ''
                    }
                }
            },
            methods: {
                triggerClick: function (element) {
                    if (document.createEvent) {
                        var event = document.createEvent('MouseEvents');
                        event.initEvent('click', true, false);
                        element.dispatchEvent(event);
                    } else if (document.createEventObject) {
                        element.fireEvent('onclick');
                    } else if (typeof element.onclick == 'function') {
                        element.onclick();
                    }
                },
                triggerValue: function () {
                    var usernameInput = document.getElementById("Username");
                    usernameInput.value = this.user.username;
                    var passwordInput = document.getElementById("Password");
                    passwordInput.value = this.user.password;
                    var rememberCheck = document.getElementById("RememberLogin");
                    rememberCheck.checked = this.user.rememberLogin;
                },
                login: function () {
                    if (this.user.username.trim() == '') {
                        this.user.username = '';
                        this.usernameInvalid = true;
                        this.usernameInvalidMessage = '账号不能为空。';
                    } else {
                        this.usernameInvalid = false;
                        this.usernameInvalidMessage = '';
                    }
                    if (this.user.password.trim() == '') {
                        this.user.password = '';
                        this.passwordInvalid = true;
                        this.passwordInvalidMessage = '密码不能为空。';
                    } else {
                        this.passwordInvalid = false;
                        this.passwordInvalidMessage = '';
                    }
                    if (this.usernameInvalid || this.passwordInvalid) {
                        return false;
                    }
                    this.triggerValue();
                    this.triggerClick(document.getElementById("Login"));
                },
                cancel: function () {
                    this.triggerValue();
                    this.triggerClick(document.getElementById("Cancel"));
                }
            }
        })
    </script>
</body>
</html>